{"version":3,"sources":["serviceWorker.js","components/Layout/MainLayout.jsx","components/Layout/LeftLayout.jsx","components/Layout/RightLayout.jsx","components/LeftContent.jsx","components/RightContentIndex.jsx","components/RightContentWork.jsx","components/RightContent.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","MainLayoutBlock","styled","div","MainLayout","children","LeftLayoutBlock","LeftLayout","RightLayoutBlock","RightLayout","LeftContentBlock","LeftContent","className","href","style","textDecoration","verticalAlign","fontSize","RightContentIndex","RightContentWork","RightContentBlock","RightContent","to","path","exact","component","GlobalStyle","createGlobalStyle","props","clicked","css","ThemeButton","App","useState","setClicked","onClick","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qPAcoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2HCjBN,IAAMC,EAAkBC,IAAOC,IAAV,KAIN,SAASC,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,OAAO,kBAACJ,EAAD,KAAkBI,G,iJCL3B,IAAMC,EAAkBJ,IAAOC,IAAV,KAON,SAASI,EAAT,GAAmC,IAAbF,EAAY,EAAZA,SACnC,OAAO,kBAACC,EAAD,KAAkBD,G,0HCR3B,IAAMG,EAAmBN,IAAOC,IAAV,KAMP,SAASM,EAAT,GAAoC,IAAbJ,EAAY,EAAZA,SACpC,OAAO,kBAACG,EAAD,KAAmBH,G,80BCP5B,IAAMK,EAAmBR,IAAOC,IAAV,KAiDP,SAASQ,IACtB,OACE,kBAACD,EAAD,KACE,yBAAKE,UAAU,kBACb,4BACE,uBAAGC,KAAK,KAAR,aACY,0CAIhB,yBAAKD,UAAU,yBACb,4BACE,4BACE,uBAAGC,KAAK,KAAR,uBAEF,8CAGJ,yBAAKD,UAAU,iBACb,4BACE,4BACE,uBAAGC,KAAK,iCAAR,kBAEF,4BACE,uBAAGA,KAAK,6FAAR,kBAIF,4BACE,uBAAGA,KAAK,IAAIC,MAAO,CAAEC,eAAgB,iBAArC,uBAMN,uBAAGH,UAAU,aAAb,UAEE,yBAAKE,MAAO,CAAEE,cAAe,SAAUC,SAAU,YAAjD,U,WCvFO,SAASC,IACtB,OACE,yBAAKN,UAAU,qBACb,uBAAGA,UAAU,aAAb,kKCHS,SAASO,IACtB,OAAO,yBAAKP,UAAU,qBAAf,qD,meCGT,IAAMQ,EAAoBlB,IAAOC,IAAV,KA4BR,SAASkB,IACtB,OACE,kBAACD,EAAD,KACE,yBAAKR,UAAU,sBACb,4BACE,kBAAC,IAAD,CAAMU,GAAG,KAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,SAAT,UAIJ,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,KAAK,QAAQE,UAAWN,K,yzBClCrC,IAAMO,EAAcC,YAAH,KAMb,SAACC,GAAD,OACAA,EAAMC,SACNC,YADA,QAQEC,EAAc7B,IAAOC,IAAV,KAYb,SAACyB,GAAD,OACAA,EAAMC,SACNC,YADA,QAwCWE,MA1Bf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNJ,EADM,KACGK,EADH,KAOb,OACE,oCACE,kBAACR,EAAD,CAAaG,QAASA,IAEtB,kBAACzB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACI,EAAD,MACA,kBAACoB,EAAD,CAAaI,QAXL,WACdD,GAAYL,IAUyBA,QAASA,GACtC,kBAAC,IAAD,CAAgBjB,UAAU,iBAG9B,kBAACH,EAAD,KACE,kBAACY,EAAD,UCjEVe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,STwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d5654244.chunk.js","sourcesContent":["/* eslint-disable*/\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MainLayoutBlock = styled.div`\n  display: flex;\n`;\n\nexport default function MainLayout({ children }) {\n  return <MainLayoutBlock>{children}</MainLayoutBlock>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LeftLayoutBlock = styled.div`\n  position: relative;\n  width: 25%;\n  height: 100vh;\n  padding: 50px;\n`;\n\nexport default function LeftLayout({ children }) {\n  return <LeftLayoutBlock>{children}</LeftLayoutBlock>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst RightLayoutBlock = styled.div`\n  width: 75%;\n  height: 100vh;\n  padding: 50px;\n`;\n\nexport default function RightLayout({ children }) {\n  return <RightLayoutBlock>{children}</RightLayoutBlock>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LeftContentBlock = styled.div`\n  font-weight: 600;\n  .icon-container {\n    h1 {\n      font-size: 1.25rem;\n      font-weight: 800;\n    }\n    a {\n      text-decoration: none;\n      color: inherit;\n      &:hover {\n        color: red;\n      }\n    }\n  }\n  .information-container {\n    margin-top: 5rem;\n    ul {\n      a {\n        text-decoration: none;\n        color: inherit;\n      }\n      list-style-type: none;\n      padding-left: 0;\n    }\n  }\n  .sns-container {\n    margin-top: 2rem;\n    ul {\n      list-style-type: none;\n      padding-left: 0;\n\n      li:hover {\n        color: red;\n      }\n      li a {\n        color: inherit;\n      }\n    }\n  }\n  .copyright {\n    position: absolute;\n    top: initial;\n    bottom: 7rem;\n    left: 50px;\n    right: initial;\n  }\n`;\n\nexport default function LeftContent() {\n  return (\n    <LeftContentBlock>\n      <div className=\"icon-container\">\n        <h1>\n          <a href=\"/\">\n            SEO SOLMIN<sup>™</sup>\n          </a>\n        </h1>\n      </div>\n      <div className=\"information-container\">\n        <ul>\n          <li>\n            <a href=\"/\">solgo123@gmail.com</a>\n          </li>\n          <li>Seoul, Korea</li>\n        </ul>\n      </div>\n      <div className=\"sns-container\">\n        <ul>\n          <li>\n            <a href=\"https://github.com/solmin0302\">Github ➞</a>\n          </li>\n          <li>\n            <a href=\"https://www.notion.so/1630c14f17c84b88b5c2d13f8b0ebcf7?v=2bf635f99bed466a8464433e47b5e5b5\">\n              Notion ➞\n            </a>\n          </li>\n          <li>\n            <a href=\"/\" style={{ textDecoration: 'line-through' }}>\n              Instagram ➞\n            </a>\n          </li>\n        </ul>\n      </div>\n      <p className=\"copyright\">\n        2020/06\n        <sup style={{ verticalAlign: 'bottom', fontSize: '0.75rem' }}>®</sup>\n      </p>\n    </LeftContentBlock>\n  );\n}\n","import React from 'react';\n\nexport default function RightContentIndex() {\n  return (\n    <div className=\"content-container\">\n      <p className=\"introduce\">\n        안녕하세요~ 풀스택 개발자가 되고 싶은 서솔민이라고합니다.\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function RightContentWork() {\n  return <div className=\"content-container\">포트폴리오 제목들</div>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Route, Link } from 'react-router-dom';\nimport RightContentIndex from './RightContentIndex';\nimport RightContentWork from './RightContentWork';\n\nconst RightContentBlock = styled.div`\n  font-weight: 600;\n\n  .menu-bar-container {\n    h1 {\n      font-size: 1.25rem;\n    }\n    a {\n      text-decoration: none;\n      color: inherit;\n      margin-right: 1rem;\n    }\n    a:hover {\n      cursor: pointer;\n      color: red;\n    }\n    a:active {\n      text-decoration: underline;\n    }\n  }\n  .content-container {\n    margin-top: 5rem;\n    .introduce {\n      width: 80%;\n    }\n  }\n`;\n\nexport default function RightContent() {\n  return (\n    <RightContentBlock>\n      <div className=\"menu-bar-container\">\n        <h1>\n          <Link to=\"/\">Hello</Link>\n          <Link to=\"/work\">Work</Link>\n        </h1>\n      </div>\n\n      <Route path=\"/\" exact component={RightContentIndex} />\n      <Route path=\"/work\" component={RightContentWork} />\n    </RightContentBlock>\n  );\n}\n","import React, { useState } from 'react';\n\nimport styled, { createGlobalStyle, css } from 'styled-components';\nimport { MdInvertColors } from 'react-icons/md';\n\nimport MainLayout from './components/Layout/MainLayout';\nimport LeftLayout from './components/Layout/LeftLayout';\nimport RightLayout from './components/Layout/RightLayout';\nimport LeftContent from './components/LeftContent';\nimport RightContent from './components/RightContent';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n  /* align-items: stretch; */\n  overflow: hidden;\n  font-size: 1.25rem;\n  background: white;\n  ${(props) =>\n    props.clicked &&\n    css`\n      background: black;\n      color: white;\n    `}\n}\n`;\n\nconst ThemeButton = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n  /* position: absolute; */\n  background: black;\n  color: white;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  ${(props) =>\n    props.clicked &&\n    css`\n      background: white;\n      color: black;\n      transform: rotate(180deg);\n    `}\n  transition: 0.3s ease-in;\n\n  .buttonIcon {\n    transform: translate(25%, 25%);\n    font-size: 2rem;\n  }\n`;\n\nfunction App() {\n  const [clicked, setClicked] = useState(false);\n\n  const onClick = () => {\n    setClicked(!clicked);\n  };\n\n  return (\n    <>\n      <GlobalStyle clicked={clicked} />\n      {/* {clicked ? } */}\n      <MainLayout>\n        <LeftLayout>\n          <LeftContent />\n          <ThemeButton onClick={onClick} clicked={clicked}>\n            <MdInvertColors className=\"buttonIcon\" />\n          </ThemeButton>\n        </LeftLayout>\n        <RightLayout>\n          <RightContent />\n        </RightLayout>\n      </MainLayout>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}